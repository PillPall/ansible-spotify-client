---
##################################################################
#
# An Example of an more complicated playbook to use several roles
#
# This Playbook will look up all User devices and if it found the
# device with the paatern "MichaelBloch" it will play a song on
# this device.
#
##################################################################
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    username: bloch-m
    temp_dest_file: "/tmp/tempfile.json"
  tasks:
  - include_role:
      name: authentication
    vars:
      config_file: "{{inventory_dir}}/group_vars/user.yaml"

  - include_role:
      name: search
    vars:
      search_for: tracks
      search_for_tracks_name: Eye of the Tiger
      search_result_output: short
      search_result_limit: 1
      search_dest_file: "{{ temp_dest_file }}"

  - name: Get User information with default settings
    spotify_user_info:
      auth_token: "{{ auth_token }}"
      state: devices
      output_format: short
    register: sp_devices

  - set_fact:
      sp_device: "{{ item.device_id }}"
    with_items: "{{ sp_devices.result.devices }}"
    when: item.name == "MichaelBloch"

  - include_role:
      name: player
    vars:
      spotify_player_state: transfer_playback
      spotify_player_device_id: "{{ sp_device }}"
    register: sp_devices

  - include_role:
      name: player
    vars:
      spotify_player_state: volume
      volume_level_percent: 80
    register: sp_devices

  - include_role:
      name: player
    vars:
      spotify_player_state: pause
    register: sp_devices

  - name: "Ansible Spotify Play specific track"
    include_role:
      name: player
    vars:
      spotify_player_state: play
      spotify_track_file: "{{ temp_dest_file }}"
    register: sp_devices
