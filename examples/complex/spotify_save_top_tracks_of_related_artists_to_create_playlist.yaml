---
##################################################################
#
# An Example of an more complicated playbook to use several roles
#
# This Playbook will look up for related artists of Passion Pit and
# save it to the file "{{ playbook_dir }}/files/related_artists.json".
# Than it runs get_related_artists for all direct related artists
# of Passion Pit and save them to the file
# "{{ playbook_dir }}/files/related_artists.json". Once done
# it will lookup the top tracks of all found related artists and
# create a playlist called "ansible playlist". At the end it will
# add all top tracks it found to the playlist.
#
##################################################################
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    artist: Young the Giant
    playlist_name: Ansible Playlist
    temp_dest_file: "/tmp/tempfile.json"
    temp_playlist_file: "/tmp/temp_playlist.json"
    username: bloch-m

  tasks:
  - name: Create user authentication token
    include_role:
      name: authentication
    vars:
      config_file: "{{inventory_dir}}/group_vars/user.yaml"

  - name: "Get related artists for artist {{ artist }}"
    include_role:
      name: get_related_artists
    vars:
      get_related_artists_for: "{{ artist }}"
      get_related_dest_file: "{{ temp_dest_file }}"
      get_related_artists_output: short

  - name: "Get related-related artists for artist {{ artist }}"
    include_role:
      name: get_related_artists
    vars:
      get_related_artists_from_file: "{{ temp_dest_file }}"
      get_related_dest_file: "{{ temp_dest_file }}"
      get_related_artists_output: short

  - name: "Get top tracks from all found related artists."
    include_role:
      name: get_artists_top_tracks
    vars:
      get_top_tracks_from_artists_file: "{{ temp_dest_file }}"
      get_top_tracks_dest_file: "{{ temp_dest_file }}"
      get_top_tracks_output: short

  - name: Create user playlist
    include_role:
      name: user_playlists
    vars:
      user_playlists_for_user: "{{ username }}"
      user_playlists_state: create
      user_playlists_name: "{{ playlist_name }}"
      user_playlists_dest_file: "{{ temp_playlist_file }}"

  - name: Add tracks to playlist
    include_role:
      name: update_playlists
    vars:
      update_playlist_state: add
      update_playlist_file: "{{ temp_playlist_file }}"
      update_playlist_track_file: "{{ temp_dest_file }}"
